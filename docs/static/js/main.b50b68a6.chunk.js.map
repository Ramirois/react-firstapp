{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","input","setinput","handleSubmit","e","preventDefault","trim","length","cats","onSubmit","type","value","onChange","target","onClick","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","imgs","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","className","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"yLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAOMC,EAAe,SAACC,GAClBA,EAAEC,iBAEEJ,EAAMK,OAAOC,OAAS,IACtBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAeO,OACjCN,EAAS,MAKjB,OACI,uBAAMO,SAAUN,EAAhB,UACI,uBACIO,KAAK,OACLC,MAAOV,EACPW,SAnBc,SAACR,GACvBF,EAASE,EAAES,OAAOF,UAoBd,wBAAQG,QAAUX,EAAlB,wB,+BC1BCY,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAS,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZV,IAAG,UAAEQ,EAAKG,cAAP,aAAE,EAAaC,iBAAiBZ,QARxB,kBAWZM,GAXY,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,gCACI,qBAAKc,IAAMd,EAAMe,IAAML,IACvB,4BAAKA,QCHJM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SACtB,ECDwB,SAACA,GACzB,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAXAC,qBAAU,WACNvB,EAAQC,GACHuB,MAAK,SAAAb,GACFW,EAAS,CACLd,KAAMG,EACNS,SAAS,SAGtB,CAACnB,IAGGoB,EDf0BI,CAAaxB,GAAjCa,EAAb,EAAQN,KAAaY,EAArB,EAAqBA,QAErB,OACI,qCACI,mCAAOnB,EAAP,OAECmB,GAAW,wCAEZ,qBAAKM,UAAU,iBAAf,SAEQZ,EAAOJ,KAAI,SAAAC,GAAI,OACX,cAAC,EAAD,eAEQA,GADCA,EAAKC,aEZzBe,EAAe,WAE1B,MAAoC1C,mBAAS,CAAC,gBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACE,qCACE,sBAAK0C,UAAU,gBAAf,UACE,sDACA,cAAC,EAAD,CAAa1C,cAAeA,OAE9B,uBACA,6BAEI4C,EAAWlB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAUA,GADLA,YChBb4B,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OAAO,cAAC,EAAD,IAAmBJ,K","file":"static/js/main.b50b68a6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [input, setinput] = useState('');\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        setinput(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (input.trim().length > 2) {\r\n            setCategories(cats => [input, ...cats]);\r\n            setinput('');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={input}\r\n                onChange={handleInputChange}\r\n            />\r\n            <button onClick={ handleSubmit }>Buscar</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=12&api_key=k5ANkoJ8oCrIk72ln0Zpq9r4790MZ9Q7`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(imgs => {\r\n        return {\r\n            id: imgs.id,\r\n            title: imgs.title,\r\n            url: imgs.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    return (\r\n        <div>\r\n            <img src={ url } alt={ title }></img>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 > {category} </h3>\r\n\r\n            {loading && <p>Loading</p>}\r\n\r\n            <div className=\"grid-container\">\r\n                {\r\n                    images.map(imgs => (\r\n                        <GifGridItem\r\n                            key={imgs.id}\r\n                            {...imgs}\r\n                        />\r\n                        ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category]);\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['Dragon Ball'])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"top-container\">\r\n        <h2>¡Buscá tu GIF!</h2>\r\n        <AddCategory setCategories={setCategories} />\r\n      </div>\r\n      <hr />\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GifGrid\r\n              key={category}\r\n              category={category}\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>);\r\n}","import ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './GifExpertApp';\r\nimport \"./index.css\";\r\n\r\nconst divRoot = document.querySelector(\"#root\");\r\n\r\nReactDOM.render(<GifExpertApp /> , divRoot);"],"sourceRoot":""}